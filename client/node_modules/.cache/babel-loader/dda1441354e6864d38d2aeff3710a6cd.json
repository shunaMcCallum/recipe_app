{"ast":null,"code":"var _jsxFileName = \"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/CreateIngredient/IngredientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IngredientForm = _ref => {\n  _s();\n\n  let {\n    onCreate\n  } = _ref;\n  const [types, setTypes] = useState([]);\n  const [measurementTypes, setMeasurementTypes] = useState([]);\n  const [ingredient, setIngredient] = useState({}); // fetch eNums from backend\n\n  useEffect(() => {\n    getTypes();\n  }, []);\n  useEffect(() => {\n    getMeasurementTypes();\n  }, []);\n\n  const getTypes = () => {\n    Request.get('http://localhost:8080/ingredient_types').then(typeData => setTypes(typeData));\n  };\n\n  const getMeasurementTypes = () => {\n    Request.get('http://localhost:8080/measurements').then(measurementData => setMeasurementTypes(measurementData));\n  }; // handle form events\n\n\n  const handleChange = event => {\n    let propertyName = event.target.name;\n    let copiedIngredient = { ...ingredient\n    };\n    copiedIngredient[propertyName] = event.target.value;\n    setIngredient(copiedIngredient);\n  };\n\n  const handleType = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedType = types[index];\n    let copiedIngredient = { ...ingredient\n    };\n    copiedIngredient['type'] = selectedType;\n    setIngredient(copiedIngredient);\n  };\n\n  const handleMeasurementType = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedMeasurementType = measurementTypes[index];\n    let copiedIngredient = { ...ingredient\n    };\n    copiedIngredient['measurementType'] = selectedMeasurementType;\n    setIngredient(copiedIngredient);\n  };\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n    onCreate(ingredient);\n  };\n\n  const typeOptions = types.map((type, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: type\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  });\n  const measurementTypeOptions = measurementTypes.map((measurementType, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: measurementType\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredient-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ingredient Name\",\n        name: \"name\",\n        onChange: handleChange,\n        defaultValue: ingredient.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        onChange: handleType,\n        defaultValue: \"select-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-type\",\n          children: \"Select an ingredient type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), typeOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        placeholder: \"Number of Calories\",\n        name: \"calories\",\n        onChange: handleChange,\n        defaultValue: ingredient.calories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Measurement\",\n        name: \"measurement\",\n        onChange: handleChange,\n        defaultValue: ingredient.measurement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"measurement_type\",\n        onChange: handleMeasurementType,\n        defaultValue: \"select-measurement-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-measurement-type\",\n          children: \"Select a measurement type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), measurement_typeOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IngredientForm, \"hJtk62168/37UsO5qk7JFnpTO1s=\");\n\n_c = IngredientForm;\nexport default IngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientForm\");","map":{"version":3,"names":["React","useEffect","useState","Request","IngredientForm","onCreate","types","setTypes","measurementTypes","setMeasurementTypes","ingredient","setIngredient","getTypes","getMeasurementTypes","get","then","typeData","measurementData","handleChange","event","propertyName","target","name","copiedIngredient","value","handleType","index","parseInt","selectedType","handleMeasurementType","selectedMeasurementType","handleSubmit","preventDefault","typeOptions","map","type","measurementTypeOptions","measurementType","calories","measurement","measurement_typeOptions"],"sources":["/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/CreateIngredient/IngredientForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\n\nconst IngredientForm = ({ onCreate }) => {\n    \n    const [types, setTypes] = useState([]);\n    const [measurementTypes, setMeasurementTypes] = useState([]);\n    \n    const [ingredient, setIngredient] = useState({});\n\n    // fetch eNums from backend\n    useEffect(() => {\n        getTypes();\n    }, [])\n\n    useEffect(() => {\n        getMeasurementTypes();\n    }, [])\n\n    const getTypes = () => {\n        Request.get('http://localhost:8080/ingredient_types')\n            .then(typeData => setTypes(typeData));\n    }\n\n    const getMeasurementTypes = () => {\n        Request.get('http://localhost:8080/measurements')\n            .then(measurementData => setMeasurementTypes(measurementData));\n    }\n\n\n    // handle form events\n    const handleChange = (event) => {\n        let propertyName = event.target.name;\n        let copiedIngredient = { ...ingredient }\n        copiedIngredient[propertyName] = event.target.value;\n        setIngredient(copiedIngredient)\n    }\n\n    const handleType = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedType = types[index]\n        let copiedIngredient = { ...ingredient };\n        copiedIngredient['type'] = selectedType\n        setIngredient(copiedIngredient)\n    }\n\n    const handleMeasurementType = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeasurementType = measurementTypes[index]\n        let copiedIngredient = { ...ingredient };\n        copiedIngredient['measurementType'] = selectedMeasurementType\n        setIngredient(copiedIngredient)\n    }\n\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        onCreate(ingredient);\n    }\n\n    const typeOptions = types.map((type, index) => {\n        return <option key={index} value={index}>{type}</option>\n    })\n\n    const measurementTypeOptions = measurementTypes.map((measurementType, index) => {\n        return <option key={index} value={index}>{measurementType}</option>\n    })\n\n    return (\n        <div className=\"ingredient-form\">\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Ingredient Name\" name=\"name\" onChange={handleChange} defaultValue={ingredient.name} />\n                <select name=\"type\" onChange={handleType} defaultValue=\"select-type\">\n                    <option disabled value=\"select-type\">Select an ingredient type</option>\n                        {typeOptions}\n                </select>\n                <input type=\"number\" step=\"0.01\" placeholder=\"Number of Calories\" name=\"calories\" onChange={handleChange} defaultValue={ingredient.calories} />\n                <input type=\"number\" placeholder=\"Measurement\" name=\"measurement\" onChange={handleChange} defaultValue={ingredient.measurement} />\n                <select name=\"measurement_type\" onChange={handleMeasurementType} defaultValue=\"select-measurement-type\">\n                    <option disabled value=\"select-measurement-type\">Select a measurement type</option>\n                    {measurement_typeOptions}\n                </select>\n                <button type=\"submit\">Save</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default IngredientForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}