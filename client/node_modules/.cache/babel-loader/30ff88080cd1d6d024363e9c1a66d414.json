{"ast":null,"code":"var _jsxFileName = \"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = _ref => {\n  _s();\n\n  let {\n    onCreate,\n    onPreparedIngredient,\n    ingredients\n  } = _ref;\n  const [meals, setMeals] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [measurementTypes, setMeasurementTypes] = useState([]);\n  const [recipe, setRecipe] = useState({});\n  const [preparedIngredient, setPreparedIngredient] = useState({\n    ingredient: null,\n    measurement: 0,\n    measurementType: \"\",\n    preparation: \"\",\n    caloriesPerPreparedIngredient: 0\n  });\n  const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n  const [ingredientToggle, setIngredientToggle] = useState(false); // fetch eNums from backend\n\n  useEffect(() => {\n    getMeals();\n  }, []);\n  useEffect(() => {\n    getTags();\n  }, []);\n  useEffect(() => {\n    getMeasurementTypes();\n  }, []);\n\n  const getMeals = () => {\n    Request.get('http://localhost:8080/meal').then(mealData => setMeals(mealData));\n  };\n\n  const getTags = () => {\n    Request.get('http://localhost:8080/tags').then(tagData => setTags(tagData));\n  };\n\n  const getMeasurementTypes = () => {\n    Request.get('http://localhost:8080/measurements').then(measurementData => setMeasurementTypes(measurementData));\n  }; // handle form events\n\n\n  const handleChange = event => {\n    let propertyName = event.target.name;\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe[propertyName] = event.target.value;\n    setRecipe(copiedRecipe);\n  };\n\n  const handleMeal = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedMeal = meals[index];\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['meal'] = selectedMeal;\n    setRecipe(copiedRecipe);\n  };\n\n  const handleTags = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedTag = tags[index];\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['tags'] = selectedTag;\n    setRecipe(copiedRecipe);\n  }; // submitting prepared ingredients\n\n\n  const handlePreparedIngredientChange = event => {\n    let propertyName = event.target.name;\n    let copiedPreparedIngredient = { ...preparedIngredient\n    };\n    copiedPreparedIngredient[propertyName] = event.target.value;\n    setPreparedIngredient(copiedPreparedIngredient);\n  };\n\n  const handleIngredients = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedIngredient = ingredients[index];\n    let copiedPreparedIngredient = { ...preparedIngredient\n    };\n    copiedPreparedIngredient['ingredient'] = selectedIngredient;\n    setPreparedIngredient(copiedPreparedIngredient);\n  };\n\n  const handleMeasurementType = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedMeasurementType = measurementTypes[index];\n    let copiedPreparedIngredient = { ...preparedIngredient\n    };\n    copiedPreparedIngredient['measurementType'] = selectedMeasurementType;\n    setPreparedIngredient(copiedPreparedIngredient);\n  };\n\n  const handlePreparedIngredientSubmit = function (event) {\n    event.preventDefault();\n    preparedIngredient['recipe'] = recipe;\n    onPreparedIngredient(preparedIngredient); // setPreparedIngredientsList([...preparedIngredient]);\n  };\n\n  const handleAllPreparedIngredientsSubmit = function (event) {\n    event.preventDefault();\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['prepared_ingredients'] = preparedIngredient;\n    setRecipe(copiedRecipe);\n  }; // add more ingredients\n\n\n  const addAnotherIngredient = function () {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"ingredient\",\n        onChange: handleIngredients,\n        defaultValue: \"select-ingredient\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-ingredient\",\n          children: \"Select an ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), ingredientsOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Measurement\",\n        name: \"measurement\",\n        onChange: handlePreparedIngredientChange,\n        defaultValue: preparedIngredient.measurement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"measurementType\",\n        onChange: handleMeasurementType,\n        defaultValue: \"select-measurement-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-measurement-type\",\n          children: \"Select a measurement type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), measurementTypeOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Preparation\",\n        name: \"preparation\",\n        onChange: handlePreparedIngredientChange,\n        defaultValue: preparedIngredient.preparation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreparedIngredientSubmit,\n        children: \"Save ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }; // create recipe\n\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n    onCreate(recipe);\n    setRecipe(recipe);\n    setIngredientToggle(true);\n  };\n\n  const mealOptions = meals.map((meal, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: meal\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 16\n    }, this);\n  });\n  const tagsOptions = tags.map((tag, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: tag\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 16\n    }, this);\n  });\n  const ingredientsOptions = ingredients.map((ingredient, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: ingredient.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 16\n    }, this);\n  });\n  const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: measurement_type\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Recipe name\",\n        name: \"name\",\n        onChange: handleChange,\n        defaultValue: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        onChange: handleMeal,\n        defaultValue: \"select-meal\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-meal\",\n          children: \"Select a meal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), mealOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        placeholder: \"Cooking time\",\n        name: \"cooking time\",\n        onChange: handleChange,\n        defaultValue: recipe.cooking_time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), ingredientToggle ? /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add ingredient:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"ingredient\",\n        onChange: handleIngredients,\n        defaultValue: \"select-ingredient\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-ingredient\",\n          children: \"Select an ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this), ingredientsOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        placeholder: \"Measurement\",\n        name: \"measurement\",\n        onChange: handlePreparedIngredientChange,\n        defaultValue: preparedIngredient.measurement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"measurementType\",\n        onChange: handleMeasurementType,\n        defaultValue: \"select-measurement-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-measurement-type\",\n          children: \"Select a measurement type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this), measurementTypeOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Preparation\",\n        name: \"preparation\",\n        onChange: handlePreparedIngredientChange,\n        defaultValue: preparedIngredient.preparation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePreparedIngredientSubmit,\n        children: \"Save ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addAnotherIngredient,\n        children: \"Add another ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAllPreparedIngredientsSubmit,\n        children: \"Submit ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add tag:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"tags\",\n      onChange: handleTags,\n      defaultValue: \"select-tag\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        value: \"select-tag\",\n        children: \"Select a tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this), tagsOptions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add instruction:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Instructions\",\n      name: \"instructions\",\n      onChange: handleChange,\n      defaultValue: recipe.instructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeForm, \"fqEL2RvLd81EOzFNai7qGExOz1A=\");\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"names":["React","useEffect","useState","Request","RecipeForm","onCreate","onPreparedIngredient","ingredients","meals","setMeals","tags","setTags","measurementTypes","setMeasurementTypes","recipe","setRecipe","preparedIngredient","setPreparedIngredient","ingredient","measurement","measurementType","preparation","caloriesPerPreparedIngredient","preparedIngredientsList","setPreparedIngredientsList","ingredientToggle","setIngredientToggle","getMeals","getTags","getMeasurementTypes","get","then","mealData","tagData","measurementData","handleChange","event","propertyName","target","name","copiedRecipe","value","handleMeal","index","parseInt","selectedMeal","handleTags","selectedTag","handlePreparedIngredientChange","copiedPreparedIngredient","handleIngredients","selectedIngredient","handleMeasurementType","selectedMeasurementType","handlePreparedIngredientSubmit","preventDefault","handleAllPreparedIngredientsSubmit","addAnotherIngredient","ingredientsOptions","measurementTypeOptions","handleSubmit","mealOptions","map","meal","tagsOptions","tag","measurement_type","cooking_time","instructions"],"sources":["/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\n\nconst RecipeForm = ({ onCreate, onPreparedIngredient, ingredients }) => {\n\n    const [meals, setMeals] = useState([]);\n    const [tags, setTags] = useState([]);\n    const [measurementTypes, setMeasurementTypes] = useState([]);\n\n    const [recipe, setRecipe] = useState({});\n    const [preparedIngredient, setPreparedIngredient] = useState({\n        ingredient: null,\n        measurement: 0,\n        measurementType: \"\",\n        preparation: \"\",\n        caloriesPerPreparedIngredient: 0,\n    });\n    const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n\n    const [ingredientToggle, setIngredientToggle] = useState(false);\n\n    // fetch eNums from backend\n    useEffect(() => {\n        getMeals();\n    }, [])\n\n    useEffect(() => {\n        getTags();\n    }, [])\n\n    useEffect(() => {\n        getMeasurementTypes();\n    }, [])\n\n    const getMeals = () => {\n        Request.get('http://localhost:8080/meal')\n            .then(mealData => setMeals(mealData));\n    }\n\n    const getTags = () => {\n        Request.get('http://localhost:8080/tags')\n            .then(tagData => setTags(tagData));\n    }\n\n    const getMeasurementTypes = () => {\n        Request.get('http://localhost:8080/measurements')\n            .then(measurementData => setMeasurementTypes(measurementData));\n    }\n\n\n    // handle form events\n    const handleChange = (event) => {\n        let propertyName = event.target.name;\n        let copiedRecipe = { ...recipe }\n        copiedRecipe[propertyName] = event.target.value;\n        setRecipe(copiedRecipe)\n    }\n\n    const handleMeal = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeal = meals[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['meal'] = selectedMeal\n        setRecipe(copiedRecipe)\n    }\n\n    const handleTags = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedTag = tags[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['tags'] = selectedTag\n        setRecipe(copiedRecipe)\n    }\n\n    // submitting prepared ingredients\n    const handlePreparedIngredientChange = (event) => {\n        let propertyName = event.target.name;\n        let copiedPreparedIngredient = { ...preparedIngredient };\n        copiedPreparedIngredient[propertyName] = event.target.value;\n        setPreparedIngredient(copiedPreparedIngredient);\n    }\n\n    const handleIngredients = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedIngredient = ingredients[index]\n        let copiedPreparedIngredient = { ...preparedIngredient };\n        copiedPreparedIngredient['ingredient'] = selectedIngredient\n        setPreparedIngredient(copiedPreparedIngredient)\n    }\n\n    const handleMeasurementType = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeasurementType = measurementTypes[index]\n        let copiedPreparedIngredient = { ...preparedIngredient };\n        copiedPreparedIngredient['measurementType'] = selectedMeasurementType\n        setPreparedIngredient(copiedPreparedIngredient)\n    }\n\n    const handlePreparedIngredientSubmit = function (event) {\n        event.preventDefault();\n        preparedIngredient['recipe'] = recipe;\n        onPreparedIngredient(preparedIngredient);\n        // setPreparedIngredientsList([...preparedIngredient]);\n    }\n\n    const handleAllPreparedIngredientsSubmit = function (event) {\n        event.preventDefault();\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['prepared_ingredients'] = preparedIngredient;\n        setRecipe(copiedRecipe)\n    }\n\n    // add more ingredients\n    const addAnotherIngredient = function () {\n        return (\n            <>\n                <select name=\"ingredient\" onChange={handleIngredients} defaultValue=\"select-ingredient\">\n                <option disabled value=\"select-ingredient\">Select an ingredient</option>\n                    {ingredientsOptions}\n                </select>\n                <input type=\"number\" placeholder=\"Measurement\" name=\"measurement\" onChange={handlePreparedIngredientChange} defaultValue={preparedIngredient.measurement} />\n                <select name=\"measurementType\" onChange={handleMeasurementType} defaultValue=\"select-measurement-type\">\n                <option disabled value=\"select-measurement-type\">Select a measurement type</option>\n                    {measurementTypeOptions}\n                </select>\n                <input type=\"text\" placeholder=\"Preparation\" name=\"preparation\" onChange={handlePreparedIngredientChange} defaultValue={preparedIngredient.preparation} />\n                <button onClick={handlePreparedIngredientSubmit}>Save ingredient</button>\n                <br />\n            </>\n        )\n    }\n\n\n    // create recipe\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        onCreate(recipe);\n        setRecipe(recipe);\n        setIngredientToggle(true);\n    }\n\n\n    const mealOptions = meals.map((meal, index) => {\n        return <option key={index} value={index}>{meal}</option>\n    })\n\n    const tagsOptions = tags.map((tag, index) => {\n        return <option key={index} value={index}>{tag}</option>\n    })\n\n    const ingredientsOptions = ingredients.map((ingredient, index) => {\n        return <option key={index} value={index}>{ingredient.name}</option>\n    })\n\n    const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n        return <option key={index} value={index}>{measurement_type}</option>\n    })\n\n\n\n    return (\n        <div className=\"recipe-form\">\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Recipe name\" name=\"name\" onChange={handleChange} defaultValue={recipe.name} />\n                <select name=\"type\" onChange={handleMeal} defaultValue=\"select-meal\">\n                    <option disabled value=\"select-meal\">Select a meal</option>\n                    {mealOptions}\n                </select>\n                {/* <input type=\"number\" placeholder=\"Numer of portions\" name=\"portions\" onChange={handleChange} defaultValue={recipe.portions} /> */}\n                <input type=\"number\" step=\"0.01\" placeholder=\"Cooking time\" name=\"cooking time\" onChange={handleChange} defaultValue={recipe.cooking_time} />\n                <button type=\"submit\">Create Recipe</button>\n            </form>\n                \n                <br />\n                <br />\n\n            {/* PREPARED INGREDIENTS */}\n            {ingredientToggle ?\n                <form>\n                    <p>Add ingredient:</p>\n                    <select name=\"ingredient\" onChange={handleIngredients} defaultValue=\"select-ingredient\">\n                        <option disabled value=\"select-ingredient\">Select an ingredient</option>\n                        {ingredientsOptions}\n                    </select>\n                    <input type=\"number\" step=\"0.01\" placeholder=\"Measurement\" name=\"measurement\" onChange={handlePreparedIngredientChange} defaultValue={preparedIngredient.measurement} />\n                    <select name=\"measurementType\" onChange={handleMeasurementType} defaultValue=\"select-measurement-type\">\n                        <option disabled value=\"select-measurement-type\">Select a measurement type</option>\n                        {measurementTypeOptions}\n                    </select>\n                    <input type=\"text\" placeholder=\"Preparation\" name=\"preparation\" onChange={handlePreparedIngredientChange} defaultValue={preparedIngredient.preparation} />\n                    <button onClick={handlePreparedIngredientSubmit}>Save ingredient</button>\n                    <br />\n                    <button onClick={addAnotherIngredient}>Add another ingredient</button>\n                    <br />\n                    <button onClick={handleAllPreparedIngredientsSubmit}>Submit ingredients</button>\n                </form>\n                : <></>}\n                \n                \n                {/* TAGS */}\n                <br />\n                <br />\n                <p>Add tag:</p>\n                <select name=\"tags\" onChange={handleTags} defaultValue=\"select-tag\">\n                    <option disabled value=\"select-tag\">Select a tag</option>\n                    {tagsOptions}\n                </select>\n\n                {/* INSTRUCTIONS */}\n                <br />\n                <br />\n                <p>Add instruction:</p>\n                <input type=\"text\" placeholder=\"Instructions\" name=\"instructions\" onChange={handleChange} defaultValue={recipe.instructions} />\n\n                <br />\n                <br />\n                \n\n        </div>\n    )\n}\n\nexport default RecipeForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}