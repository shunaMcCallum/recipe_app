{"ast":null,"code":"var _jsxFileName = \"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/CreateIngredient/IngredientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IngredientForm = _ref => {\n  _s();\n\n  let {\n    onCreate\n  } = _ref;\n  const [types, setTypes] = useState([]);\n  const [measurementTypes, setMeasurementTypes] = useState([]);\n  const [ingredient, setIngredient] = useState({\n    name: \"\",\n    type: \"\",\n    calories: 0,\n    measurement: 0,\n    measurement_type: \"\"\n  }); // fetch eNums from backend\n\n  useEffect(() => {\n    getTypes();\n  }, []);\n  useEffect(() => {\n    getMeasurementTypes();\n  }, []);\n\n  const getTypes = () => {\n    Request.get('http://localhost:8080/ingredient_types').then(typeData => setTypes(typeData));\n  };\n\n  const getMeasurementTypes = () => {\n    Request.get('http://localhost:8080/measurements').then(measurementData => setMeasurementTypes(measurementData));\n  }; // handle form events\n\n\n  const handleChange = function (event) {\n    let propertyName = event.target.name;\n    let copiedIngredient = { ...ingredient\n    };\n    copiedIngredient[propertyName] = event.target.value;\n    setIngredient(copiedIngredient);\n  }; // const handleType = function (event) {\n  //     const index = parseInt(event.target.value)\n  //     const selectedType = types[index]\n  //     let copiedIngredient = { ...ingredient };\n  //     copiedIngredient['type'] = selectedType\n  //     setIngredient(copiedIngredient)\n  // }\n\n\n  const handleMeasurementType = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedMeasurementType = measurementTypes[index];\n    let copiedIngredient = { ...ingredient\n    };\n    copiedIngredient['measurementType'] = selectedMeasurementType;\n    setIngredient(copiedIngredient);\n  };\n\n  const handleSubmit = function (event) {\n    console.log(\"handle submit called\");\n    event.preventDefault();\n    onCreate(ingredient);\n  };\n\n  const typeOptions = types.map((type, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: type\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  });\n  const measurementTypeOptions = measurementTypes.map((measurementType, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: measurementType\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredient-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ingredient Name\",\n        name: \"Name\",\n        onChange: handleChange,\n        value: ingredient.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"Type\",\n        onChange: handleType,\n        defaultValue: \"select-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-type\",\n          children: \" Select an ingredient type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), typeOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Calories\",\n        name: \"Calories\",\n        onChange: handleChange,\n        value: ingredient.calories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Measurement\",\n        name: \"per\",\n        onChange: handleChange,\n        value: ingredient.measurement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"Measurement Type\",\n        onChange: handleMeasurementType,\n        defaultValue: \"select-measurement-type\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-measurement-type\",\n          children: \" Select a measurement type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), measurementTypeOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IngredientForm, \"YU+aOmRDs10ePoV+UCSC1O6Rbbs=\");\n\n_c = IngredientForm;\nexport default IngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientForm\");","map":{"version":3,"names":["React","useEffect","useState","Request","IngredientForm","onCreate","types","setTypes","measurementTypes","setMeasurementTypes","ingredient","setIngredient","name","type","calories","measurement","measurement_type","getTypes","getMeasurementTypes","get","then","typeData","measurementData","handleChange","event","propertyName","target","copiedIngredient","value","handleMeasurementType","index","parseInt","selectedMeasurementType","handleSubmit","console","log","preventDefault","typeOptions","map","measurementTypeOptions","measurementType","handleType"],"sources":["/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/CreateIngredient/IngredientForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\n\nconst IngredientForm = ({ onCreate }) => {\n    \n    const [types, setTypes] = useState([]);\n    const [measurementTypes, setMeasurementTypes] = useState([]);\n    \n    const [ingredient, setIngredient] = useState({\n        name: \"\",\n        type: \"\",\n        calories: 0,\n        measurement: 0,\n        measurement_type: \"\"\n    });\n\n    // fetch eNums from backend\n    useEffect(() => {\n        getTypes();\n    }, [])\n\n    useEffect(() => {\n        getMeasurementTypes();\n    }, [])\n\n    const getTypes = () => {\n        Request.get('http://localhost:8080/ingredient_types')\n            .then(typeData => setTypes(typeData));\n    }\n\n    const getMeasurementTypes = () => {\n        Request.get('http://localhost:8080/measurements')\n            .then(measurementData => setMeasurementTypes(measurementData));\n    }\n\n\n    // handle form events\n    const handleChange = function (event) {\n        let propertyName = event.target.name;\n        let copiedIngredient = { ...ingredient }\n        copiedIngredient[propertyName] = event.target.value;\n        setIngredient(copiedIngredient)\n    }\n\n    // const handleType = function (event) {\n    //     const index = parseInt(event.target.value)\n    //     const selectedType = types[index]\n    //     let copiedIngredient = { ...ingredient };\n    //     copiedIngredient['type'] = selectedType\n    //     setIngredient(copiedIngredient)\n    // }\n\n    const handleMeasurementType = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeasurementType = measurementTypes[index]\n        let copiedIngredient = { ...ingredient };\n        copiedIngredient['measurementType'] = selectedMeasurementType\n        setIngredient(copiedIngredient)\n    }\n\n    const handleSubmit = function (event) {\n        console.log(\"handle submit called\");\n        event.preventDefault();\n        onCreate(ingredient);\n    }\n\n    const typeOptions = types.map((type, index) => {\n        return <option key={index} value={index}>{type}</option>\n    })\n\n    const measurementTypeOptions = measurementTypes.map((measurementType, index) => {\n        return <option key={index} value={index}>{measurementType}</option>\n    })\n\n    return (\n        <div className=\"ingredient-form\">\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Ingredient Name\" name=\"Name\" onChange={handleChange} value={ingredient.name} />\n                <select name=\"Type\" onChange={handleType} defaultValue=\"select-type\">\n                    <option disabled value=\"select-type\"> Select an ingredient type</option>\n                        {typeOptions}\n                </select>\n                <input type=\"number\" placeholder=\"Number of Calories\" name=\"Calories\" onChange={handleChange} value={ingredient.calories} />\n                <input type=\"number\" placeholder=\"Measurement\" name=\"per\" onChange={handleChange} value={ingredient.measurement} />\n                <select name=\"Measurement Type\" onChange={handleMeasurementType} defaultValue=\"select-measurement-type\">\n                    <option disabled value=\"select-measurement-type\"> Select a measurement type</option>\n                    {measurementTypeOptions}\n                </select>\n                <button type=\"submit\">Save</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default IngredientForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}