{"ast":null,"code":"var _jsxFileName = \"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = _ref => {\n  _s();\n\n  let {\n    onCreate,\n    onPreparedIngredient,\n    ingredients\n  } = _ref;\n  const [meals, setMeals] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [measurementTypes, setMeasurementTypes] = useState([]);\n  const [recipe, setRecipe] = useState({});\n  const [preparedIngredient, setPreparedIngredient] = useState({});\n  const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n  const [ingredientToggle, setIngredientToggle] = useState(false);\n  const [ingredientFormValues, setIngredientFormValues] = useState([{\n    ingredient: null,\n    measurement: 0.0,\n    measurementType: \"\",\n    preparation: \"\"\n  }]); // fetch eNums from backend\n\n  useEffect(() => {\n    getMeals();\n  }, []);\n  useEffect(() => {\n    getTags();\n  }, []);\n  useEffect(() => {\n    getMeasurementTypes();\n  }, []);\n\n  const getMeals = () => {\n    Request.get('http://localhost:8080/meal').then(mealData => setMeals(mealData));\n  };\n\n  const getTags = () => {\n    Request.get('http://localhost:8080/tags').then(tagData => setTags(tagData));\n  };\n\n  const getMeasurementTypes = () => {\n    Request.get('http://localhost:8080/measurements').then(measurementData => setMeasurementTypes(measurementData));\n  }; // handle form events\n\n\n  const handleChange = event => {\n    let propertyName = event.target.name;\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe[propertyName] = event.target.value;\n    setRecipe(copiedRecipe);\n  };\n\n  const handleMeal = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedMeal = meals[index];\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['meal'] = selectedMeal;\n    setRecipe(copiedRecipe);\n  };\n\n  const handleTags = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedTag = tags[index];\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['tags'] = selectedTag;\n    setRecipe(copiedRecipe);\n  }; // submitting prepared ingredients\n\n\n  const handlePreparedIngredientChange = (index, event) => {\n    let newIngredientFormValues = [...ingredientFormValues]; // newIngredientFormValues[i][event.target.name] = event.target.value\n    // let propertyName = event.target.name;\n\n    let copiedPreparedIngredient = { ...preparedIngredient\n    };\n    copiedPreparedIngredient[newIngredientFormValues[index][event.target.name]] = event.target.value;\n    setPreparedIngredient(copiedPreparedIngredient);\n  }; // const handleMeasurement = (event) => {\n  //     let propertyName = event.target.name;\n  //     let copiedPreparedIngredient = { ...preparedIngredient };\n  //     copiedPreparedIngredient[propertyName] = parseInt(event.target.value);\n  //     setPreparedIngredient(copiedPreparedIngredient);\n  // }\n\n\n  const handleIngredients = function (index, event) {\n    const i = parseInt(event.target.value);\n    const selectedIngredient = ingredients[i];\n    let newIngredientFormValues = [...ingredientFormValues];\n    let copiedPreparedIngredient = { ...preparedIngredient\n    };\n    copiedPreparedIngredient[newIngredientFormValues[index][event.target.name]] = selectedIngredient;\n    setPreparedIngredient(copiedPreparedIngredient);\n  };\n\n  const handleMeasurementType = function (event) {\n    const i = parseInt(event.target.value);\n    const selectedIngredient = ingredients[i];\n    let newIngredientFormValues = [...ingredientFormValues];\n    let copiedPreparedIngredient = { ...preparedIngredient\n    };\n    copiedPreparedIngredient[newIngredientFormValues[index][event.target.name]] = selectedIngredient;\n    setPreparedIngredient(copiedPreparedIngredient);\n  }; // const handlePreparedIngredientSubmit = function (event) {\n  //     event.preventDefault();\n  //     onPreparedIngredient(preparedIngredient);\n  //     preparedIngredientsList.push(preparedIngredient);\n  // }\n\n\n  const handleAllPreparedIngredientsSubmit = function (event) {\n    event.preventDefault();\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['prepared_ingredients'] = preparedIngredientsList;\n    setRecipe(copiedRecipe);\n  }; // add more ingredients\n\n\n  const addAnotherIngredient = function () {\n    setIngredientFormValues([...ingredientFormValues]);\n  }; // create recipe\n\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n    onCreate(recipe);\n    setRecipe(recipe);\n    setIngredientToggle(true);\n  };\n\n  const mealOptions = meals.map((meal, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: meal\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 16\n    }, this);\n  });\n  const tagsOptions = tags.map((tag, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: tag\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 16\n    }, this);\n  });\n  const ingredientsOptions = ingredients.map((ingredient, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: ingredient.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 16\n    }, this);\n  });\n  const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: measurement_type\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Recipe name\",\n        name: \"name\",\n        onChange: handleChange,\n        defaultValue: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        onChange: handleMeal,\n        defaultValue: \"select-meal\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-meal\",\n          children: \"Select a meal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), mealOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        placeholder: \"Cooking time\",\n        name: \"cooking time\",\n        onChange: handleChange,\n        defaultValue: recipe.cooking_time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }, this), ingredientFormValues.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add ingredient:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"ingredient\",\n        onChange: event => handleIngredients(index, event),\n        value: element.ingredient || null,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-ingredient\",\n          children: \"Select an ingredient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), ingredientsOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        placeholder: \"Measurement\",\n        name: \"measurement\",\n        onChange: event => handlePreparedIngredientChange(index, event),\n        value: element.measurement || 0.0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"measurementType\",\n        onChange: event => handleMeasurementType(index, event),\n        value: element.measurementType || \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-measurement-type\",\n          children: \"Select a measurement type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), measurementTypeOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Preparation\",\n        name: \"preparation\",\n        onChange: event => handlePreparedIngredientChange(index, event),\n        value: element.preparation || \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addAnotherIngredient(),\n        children: \"Add another ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAllPreparedIngredientsSubmit(),\n        children: \"Submit ingredients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add tag:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"tags\",\n      onChange: handleTags,\n      defaultValue: \"select-tag\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        value: \"select-tag\",\n        children: \"Select a tag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }, this), tagsOptions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add instruction:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Instructions\",\n      name: \"instructions\",\n      onChange: handleChange,\n      defaultValue: recipe.instructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeForm, \"ozaAZV7A02/34S+ke9qIqwhmPBU=\");\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"names":["React","useEffect","useState","Request","RecipeForm","onCreate","onPreparedIngredient","ingredients","meals","setMeals","tags","setTags","measurementTypes","setMeasurementTypes","recipe","setRecipe","preparedIngredient","setPreparedIngredient","preparedIngredientsList","setPreparedIngredientsList","ingredientToggle","setIngredientToggle","ingredientFormValues","setIngredientFormValues","ingredient","measurement","measurementType","preparation","getMeals","getTags","getMeasurementTypes","get","then","mealData","tagData","measurementData","handleChange","event","propertyName","target","name","copiedRecipe","value","handleMeal","index","parseInt","selectedMeal","handleTags","selectedTag","handlePreparedIngredientChange","newIngredientFormValues","copiedPreparedIngredient","handleIngredients","i","selectedIngredient","handleMeasurementType","handleAllPreparedIngredientsSubmit","preventDefault","addAnotherIngredient","handleSubmit","mealOptions","map","meal","tagsOptions","tag","ingredientsOptions","measurementTypeOptions","measurement_type","cooking_time","element","instructions"],"sources":["/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\n\nconst RecipeForm = ({ onCreate, onPreparedIngredient, ingredients }) => {\n\n    const [meals, setMeals] = useState([]);\n    const [tags, setTags] = useState([]);\n    const [measurementTypes, setMeasurementTypes] = useState([]);\n\n    const [recipe, setRecipe] = useState({});\n    const [preparedIngredient, setPreparedIngredient] = useState({});\n    const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n\n    const [ingredientToggle, setIngredientToggle] = useState(false);\n\n    const [ingredientFormValues, setIngredientFormValues] = useState([{\n        ingredient: null,\n        measurement: 0.0,\n        measurementType: \"\",\n        preparation: \"\"\n    }]);\n\n    // fetch eNums from backend\n    useEffect(() => {\n        getMeals();\n    }, [])\n\n    useEffect(() => {\n        getTags();\n    }, [])\n\n    useEffect(() => {\n        getMeasurementTypes();\n    }, [])\n\n    const getMeals = () => {\n        Request.get('http://localhost:8080/meal')\n            .then(mealData => setMeals(mealData));\n    }\n\n    const getTags = () => {\n        Request.get('http://localhost:8080/tags')\n            .then(tagData => setTags(tagData));\n    }\n\n    const getMeasurementTypes = () => {\n        Request.get('http://localhost:8080/measurements')\n            .then(measurementData => setMeasurementTypes(measurementData));\n    }\n\n\n    // handle form events\n    const handleChange = (event) => {\n        let propertyName = event.target.name;\n        let copiedRecipe = { ...recipe }\n        copiedRecipe[propertyName] = event.target.value;\n        setRecipe(copiedRecipe)\n    }\n\n    const handleMeal = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeal = meals[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['meal'] = selectedMeal\n        setRecipe(copiedRecipe)\n    }\n\n    const handleTags = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedTag = tags[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['tags'] = selectedTag\n        setRecipe(copiedRecipe)\n    }\n\n    // submitting prepared ingredients\n    const handlePreparedIngredientChange = (index, event) => {\n        let newIngredientFormValues = [...ingredientFormValues];\n        // newIngredientFormValues[i][event.target.name] = event.target.value\n        // let propertyName = event.target.name;\n        let copiedPreparedIngredient = { ...preparedIngredient };\n        copiedPreparedIngredient[newIngredientFormValues[index][event.target.name]] = event.target.value;\n        setPreparedIngredient(copiedPreparedIngredient);\n    }\n\n    // const handleMeasurement = (event) => {\n    //     let propertyName = event.target.name;\n    //     let copiedPreparedIngredient = { ...preparedIngredient };\n    //     copiedPreparedIngredient[propertyName] = parseInt(event.target.value);\n    //     setPreparedIngredient(copiedPreparedIngredient);\n    // }\n\n    const handleIngredients = function (index, event) {\n        const i = parseInt(event.target.value)\n        const selectedIngredient = ingredients[i]\n\n        let newIngredientFormValues = [...ingredientFormValues];\n        let copiedPreparedIngredient = { ...preparedIngredient };\n        copiedPreparedIngredient[newIngredientFormValues[index][event.target.name]] = selectedIngredient\n        setPreparedIngredient(copiedPreparedIngredient)\n    }\n\n    const handleMeasurementType = function (event) {\n        const i = parseInt(event.target.value)\n        const selectedIngredient = ingredients[i]\n\n        let newIngredientFormValues = [...ingredientFormValues];\n        let copiedPreparedIngredient = { ...preparedIngredient };\n        copiedPreparedIngredient[newIngredientFormValues[index][event.target.name]] = selectedIngredient\n        setPreparedIngredient(copiedPreparedIngredient)\n    }\n\n    // const handlePreparedIngredientSubmit = function (event) {\n    //     event.preventDefault();\n    //     onPreparedIngredient(preparedIngredient);\n    //     preparedIngredientsList.push(preparedIngredient);\n    // }\n\n    const handleAllPreparedIngredientsSubmit = function (event) {\n        event.preventDefault();\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['prepared_ingredients'] = preparedIngredientsList;\n        setRecipe(copiedRecipe);\n    }\n\n    // add more ingredients\n    const addAnotherIngredient = function () {\n        setIngredientFormValues([...ingredientFormValues])\n    }\n\n\n    // create recipe\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        onCreate(recipe);\n        setRecipe(recipe);\n        setIngredientToggle(true);\n    }\n\n\n    const mealOptions = meals.map((meal, index) => {\n        return <option key={index} value={index}>{meal}</option>\n    })\n\n    const tagsOptions = tags.map((tag, index) => {\n        return <option key={index} value={index}>{tag}</option>\n    })\n\n    const ingredientsOptions = ingredients.map((ingredient, index) => {\n        return <option key={index} value={index}>{ingredient.name}</option>\n    })\n\n    const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n        return <option key={index} value={index}>{measurement_type}</option>\n    })\n\n\n\n    return (\n        <div className=\"recipe-form\">\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Recipe name\" name=\"name\" onChange={handleChange} defaultValue={recipe.name} />\n                <select name=\"type\" onChange={handleMeal} defaultValue=\"select-meal\">\n                    <option disabled value=\"select-meal\">Select a meal</option>\n                    {mealOptions}\n                </select>\n                {/* <input type=\"number\" placeholder=\"Number of portions\" name=\"portions\" onChange={handleChange} defaultValue={recipe.portions} /> */}\n                <input type=\"number\" step=\"0.01\" placeholder=\"Cooking time\" name=\"cooking time\" onChange={handleChange} defaultValue={recipe.cooking_time} />\n            </form>\n                \n                <br />\n                <br />\n\n            {/* PREPARED INGREDIENTS */}\n            {/* {ingredientToggle ? */}\n                {/* <form> */}\n                    {/* <p>Add ingredient:</p> */}\n                    {/* <select name=\"ingredient\" onChange={handleIngredients} defaultValue=\"select-ingredient\"> */}\n                        {/* <option disabled value=\"select-ingredient\">Select an ingredient</option> */}\n                        {/* {ingredientsOptions} */}\n                    {/* </select> */}\n                    {/* <input type=\"number\" step=\"0.01\" placeholder=\"Measurement\" name=\"measurement\" onChange={handlePreparedIngredientChange} defaultValue={preparedIngredient.measurement} /> */}\n                    {/* <select name=\"measurementType\" onChange={handleMeasurementType} defaultValue=\"select-measurement-type\"> */}\n                        {/* <option disabled value=\"select-measurement-type\">Select a measurement type</option> */}\n                        {/* {measurementTypeOptions} */}\n                    {/* </select> */}\n                    {/* <input type=\"text\" placeholder=\"Preparation\" name=\"preparation\" onChange={handlePreparedIngredientChange} defaultValue={preparedIngredient.preparation} /> */}\n                    {/* <button onClick={handlePreparedIngredientSubmit}>Save ingredient</button> */}\n                    {/* <br /> */}\n                    {/* <button onClick={addAnotherIngredient}>Add another ingredient</button> */}\n                    {/* <br /> */}\n                    {/* <button onClick={handleAllPreparedIngredientsSubmit}>Submit ingredients</button> */}\n                {/* </form> */}\n            {/* : <></>} */}\n            \n            {ingredientFormValues.map((element, index) => (\n                <div>\n                    <p>Add ingredient:</p>\n                    <select name=\"ingredient\" onChange={event => handleIngredients(index, event)} value={element.ingredient || null}>\n                        <option disabled value=\"select-ingredient\">Select an ingredient</option>\n                        {ingredientsOptions}\n                    </select>\n                    <input type=\"number\" step=\"0.01\" placeholder=\"Measurement\" name=\"measurement\" onChange={event => handlePreparedIngredientChange(index, event)} value={element.measurement || 0.0} />\n                    <select name=\"measurementType\" onChange={event => handleMeasurementType(index, event)} value={element.measurementType || \"\"}>\n                        <option disabled value=\"select-measurement-type\">Select a measurement type</option>\n                        {measurementTypeOptions}\n                    </select>\n                    <input type=\"text\" placeholder=\"Preparation\" name=\"preparation\" onChange={event => handlePreparedIngredientChange(index, event)} value={element.preparation || \"\"} />\n                    <br />\n\n                    <button onClick={() => addAnotherIngredient()}>Add another ingredient</button>\n                    <br />\n                    <button onClick={() => handleAllPreparedIngredientsSubmit()}>Submit ingredients</button>\n                </div>\n            ))}\n                \n                \n                {/* TAGS */}\n                <br />\n                <br />\n                <p>Add tag:</p>\n                <select name=\"tags\" onChange={handleTags} defaultValue=\"select-tag\">\n                    <option disabled value=\"select-tag\">Select a tag</option>\n                    {tagsOptions}\n                </select>\n\n                {/* INSTRUCTIONS */}\n                <br />\n                <br />\n                <p>Add instruction:</p>\n                <input type=\"text\" placeholder=\"Instructions\" name=\"instructions\" onChange={handleChange} defaultValue={recipe.instructions} />\n\n                <br />\n                <br />\n            \n                <button type=\"submit\">Create Recipe</button>\n\n        </div>\n    )\n}\n\nexport default RecipeForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}