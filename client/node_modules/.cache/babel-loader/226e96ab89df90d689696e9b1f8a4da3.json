{"ast":null,"code":"var _jsxFileName = \"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Request from '../../../helpers/request';\nimport IngredientSection from './RecipeFormIngredientSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = _ref => {\n  _s();\n\n  let {\n    onCreate,\n    onUpdate,\n    onPreparedIngredient,\n    ingredients\n  } = _ref;\n  const [meals, setMeals] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [measurementTypes, setMeasurementTypes] = useState([]);\n  const [recipe, setRecipe] = useState({// name: \"\",\n    // meal: \"\",\n    // calories: 0,\n    // portions: 0,\n    // preparedIngredients: [],\n    // cooking_time: 0,\n    // instructions: [],\n    // tags: []\n  });\n  const [preparedIngredient, setPreparedIngredient] = useState({// ingredient: {},\n    // measurement: 0,\n    // measurementType: \"\",\n    // preparation: \"\",\n    // caloriesPerPreparedIngredient: 0\n  });\n  const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n  const [ingredientFormValues, setIngredientFormValues] = useState([{}]);\n  const [toggleForm, setToggleForm] = useState(false);\n  const [toggleButton, setToggleButton] = useState(false);\n  const [recipes, setRecipes] = useState([]);\n  const [prepared_ingredients, setPrepared_ingredients] = useState([]);\n\n  const getRecipes = () => {\n    Request.get('http://localhost:8080/recipes/').then(recipeData => findRecipeByName(recipeData));\n  };\n\n  const findRecipeByName = recipeList => {\n    for (let item of recipeList) {\n      if (item.name === recipe.name) {\n        setRecipe(item);\n      }\n    }\n  };\n\n  const getPreparedIngredients = () => {\n    Request.get('http://localhost:8080/prepared_ingredients/').then(data => findByName(data));\n  }; // fetch eNums from backend\n\n\n  useEffect(() => {\n    getMeals();\n  }, []);\n  useEffect(() => {\n    getTags();\n  }, []);\n  useEffect(() => {\n    getMeasurementTypes();\n  }, []);\n\n  const getMeals = () => {\n    Request.get('http://localhost:8080/meal').then(mealData => setMeals(mealData));\n  };\n\n  const getTags = () => {\n    Request.get('http://localhost:8080/tags').then(tagData => setTags(tagData));\n  };\n\n  const getMeasurementTypes = () => {\n    Request.get('http://localhost:8080/measurements').then(measurementData => setMeasurementTypes(measurementData));\n  }; // handle form events\n\n\n  const handleChange = event => {\n    let propertyName = event.target.name;\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe[propertyName] = event.target.value;\n    setRecipe(copiedRecipe);\n  };\n\n  const handleMeal = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedMeal = meals[index];\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['meal'] = selectedMeal;\n    setRecipe(copiedRecipe);\n  };\n\n  const handleTags = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedTag = tags[index];\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['tags'] = [];\n    copiedRecipe['tags'].push(selectedTag);\n    setRecipe(copiedRecipe);\n  };\n\n  const handleInstructions = event => {\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['instructions'] = [];\n    copiedRecipe['instructions'].push(event.target.value);\n    setRecipe(copiedRecipe);\n  }; // submitting prepared ingredients\n\n\n  const handlePreparedIngredientChange = (index, event) => {\n    let data = [...ingredientFormValues];\n    data[index][event.target.name] = event.target.value;\n    setPreparedIngredient(data);\n    const copiedList = preparedIngredientsList;\n    copiedList[index] = data;\n    setPreparedIngredientsList(copiedList);\n  };\n\n  const handleIngredients = function (index, event) {\n    const i = parseInt(event.target.value);\n    const selectedIngredient = ingredients[i];\n    let data = [...ingredientFormValues];\n    data[index][event.target.name] = selectedIngredient;\n    setPreparedIngredient(data);\n    const copiedList = preparedIngredientsList;\n    copiedList[index] = data;\n    setPreparedIngredientsList(copiedList);\n  };\n\n  const handleMeasurementType = function (index, event) {\n    const i = parseInt(event.target.value);\n    const selectedType = measurementTypes[i];\n    let data = [...ingredientFormValues];\n    data[index][event.target.name] = selectedType;\n    setPreparedIngredient(data);\n    const copiedList = preparedIngredientsList;\n    copiedList[index] = data;\n    setPreparedIngredientsList(copiedList);\n  };\n\n  const handleAllPreparedIngredientsSubmit = function (event) {\n    event.preventDefault();\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['preparedIngredients'] = [];\n    ingredientFormValues.forEach(element => {\n      onPreparedIngredient(element);\n      copiedRecipe['preparedIngredients'].push(element);\n    });\n    setRecipe(copiedRecipe);\n  }; // add more ingredients\n\n\n  const addAnotherIngredient = function () {\n    setIngredientFormValues([...ingredientFormValues, {}]);\n  }; // create recipe\n\n\n  const handleSubmit = function (event) {\n    event.preventDefault();\n    console.log(recipe);\n    onUpdate(recipe); // onCreate(recipe);\n  };\n\n  const createRecipe = function (event) {\n    event.preventDefault();\n    onCreate(recipe);\n    setToggleButton(true);\n  };\n\n  const addDetails = () => {\n    getRecipes();\n  };\n\n  const mealOptions = meals.map((meal, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: meal\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 16\n    }, this);\n  });\n  const tagsOptions = tags.map((tag, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: tag\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 16\n    }, this);\n  });\n  const ingredientsOptions = ingredients.map((ingredient, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: ingredient.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 16\n    }, this);\n  });\n  const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: measurement_type\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Recipe name\",\n      name: \"name\",\n      onChange: handleChange,\n      defaultValue: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"type\",\n      onChange: handleMeal,\n      defaultValue: \"select-meal\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        value: \"select-meal\",\n        children: \"Select a meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), mealOptions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Number of portions\",\n      name: \"portions\",\n      onChange: handleChange,\n      defaultValue: recipe.portions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      placeholder: \"Cooking time\",\n      name: \"cooking_time\",\n      onChange: handleChange,\n      defaultValue: recipe.cooking_time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createRecipe,\n      children: \"Create recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), toggleButton ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addDetails,\n      children: \"Add details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this) : null, /*#__PURE__*/_jsxDEV(IngredientSection, {\n      handleAllPreparedIngredientsSubmit: handleAllPreparedIngredientsSubmit,\n      ingredientsOptions: ingredientsOptions,\n      handleIngredients: handleIngredients,\n      handlePreparedIngredientChange: handlePreparedIngredientChange,\n      handleMeasurementType: handleMeasurementType,\n      measurementTypeOptions: measurementTypeOptions,\n      addAnotherIngredient: addAnotherIngredient,\n      ingredientFormValues: ingredientFormValues\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add tag:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"tags\",\n        onChange: handleTags,\n        defaultValue: \"select-tag\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-tag\",\n          children: \"Select a tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this), tagsOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add instruction:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Instructions\",\n        name: \"instructions\",\n        onChange: handleInstructions,\n        defaultValue: recipe.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Create Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeForm, \"A5OV3qt7sKFiI8ydYtoyk2LHUYo=\");\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Request","IngredientSection","RecipeForm","onCreate","onUpdate","onPreparedIngredient","ingredients","meals","setMeals","tags","setTags","measurementTypes","setMeasurementTypes","recipe","setRecipe","preparedIngredient","setPreparedIngredient","preparedIngredientsList","setPreparedIngredientsList","ingredientFormValues","setIngredientFormValues","toggleForm","setToggleForm","toggleButton","setToggleButton","recipes","setRecipes","prepared_ingredients","setPrepared_ingredients","getRecipes","get","then","recipeData","findRecipeByName","recipeList","item","name","getPreparedIngredients","data","findByName","getMeals","getTags","getMeasurementTypes","mealData","tagData","measurementData","handleChange","event","propertyName","target","copiedRecipe","value","handleMeal","index","parseInt","selectedMeal","handleTags","selectedTag","push","handleInstructions","handlePreparedIngredientChange","copiedList","handleIngredients","i","selectedIngredient","handleMeasurementType","selectedType","handleAllPreparedIngredientsSubmit","preventDefault","forEach","element","addAnotherIngredient","handleSubmit","console","log","createRecipe","addDetails","mealOptions","map","meal","tagsOptions","tag","ingredientsOptions","ingredient","measurementTypeOptions","measurement_type","portions","cooking_time","instructions"],"sources":["/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Request from '../../../helpers/request';\nimport IngredientSection from './RecipeFormIngredientSection';\n\nconst RecipeForm = ({ onCreate, onUpdate, onPreparedIngredient, ingredients }) => {\n\n    const [meals, setMeals] = useState([]);\n    const [tags, setTags] = useState([]);\n    const [measurementTypes, setMeasurementTypes] = useState([]);\n\n    const [recipe, setRecipe] = useState({\n        // name: \"\",\n        // meal: \"\",\n        // calories: 0,\n        // portions: 0,\n        // preparedIngredients: [],\n        // cooking_time: 0,\n        // instructions: [],\n        // tags: []\n    });\n    const [preparedIngredient, setPreparedIngredient] = useState({\n        // ingredient: {},\n        // measurement: 0,\n        // measurementType: \"\",\n        // preparation: \"\",\n        // caloriesPerPreparedIngredient: 0\n    });\n    const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n    const [ingredientFormValues, setIngredientFormValues] = useState([{}]);\n\n    const [toggleForm, setToggleForm] = useState(false);\n    const [toggleButton, setToggleButton] = useState(false);\n\n    const [recipes, setRecipes] = useState([]);\n    const [prepared_ingredients, setPrepared_ingredients] = useState([]);\n\n    const getRecipes = () => {\n        Request.get('http://localhost:8080/recipes/')\n        .then(recipeData => findRecipeByName(recipeData))\n        \n    }\n\n    const findRecipeByName = (recipeList) => {\n    for (let item of recipeList) {\n        if (item.name === recipe.name) {\n            setRecipe(item);\n        }\n    }\n    }\n    \n    const getPreparedIngredients = () => {\n        Request.get('http://localhost:8080/prepared_ingredients/')\n            .then(data => findByName(data))\n\n    }\n\n\n    // fetch eNums from backend\n    useEffect(() => {\n        getMeals();\n    }, [])\n\n    useEffect(() => {\n        getTags();\n    }, [])\n\n    useEffect(() => {\n        getMeasurementTypes();\n    }, [])\n\n    const getMeals = () => {\n        Request.get('http://localhost:8080/meal')\n            .then(mealData => setMeals(mealData));\n    }\n\n    const getTags = () => {\n        Request.get('http://localhost:8080/tags')\n            .then(tagData => setTags(tagData));\n    }\n\n    const getMeasurementTypes = () => {\n        Request.get('http://localhost:8080/measurements')\n            .then(measurementData => setMeasurementTypes(measurementData));\n    }\n\n\n    // handle form events\n    const handleChange = (event) => {\n        let propertyName = event.target.name;\n        let copiedRecipe = { ...recipe }\n        copiedRecipe[propertyName] = event.target.value;\n        setRecipe(copiedRecipe)\n    }\n\n    const handleMeal = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeal = meals[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['meal'] = selectedMeal\n        setRecipe(copiedRecipe)\n    }\n\n    const handleTags = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedTag = tags[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['tags'] = [];\n        copiedRecipe['tags'].push(selectedTag);\n        setRecipe(copiedRecipe)\n    }\n\n    const handleInstructions = (event) => {\n        let copiedRecipe = { ...recipe }\n        copiedRecipe['instructions'] = [];\n        copiedRecipe['instructions'].push(event.target.value);\n        setRecipe(copiedRecipe)\n    }\n\n    // submitting prepared ingredients\n    const handlePreparedIngredientChange = (index, event) => {\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = event.target.value\n        setPreparedIngredient(data);\n\n        const copiedList = preparedIngredientsList;\n        copiedList[index] = data;\n        setPreparedIngredientsList(copiedList);\n    }\n\n    const handleIngredients = function (index, event) {\n        const i = parseInt(event.target.value)\n        const selectedIngredient = ingredients[i]\n\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = selectedIngredient\n        setPreparedIngredient(data)\n\n        const copiedList = preparedIngredientsList;\n        copiedList[index] = data;\n        setPreparedIngredientsList(copiedList);\n    }\n\n    const handleMeasurementType = function (index, event) {\n        const i = parseInt(event.target.value)\n        const selectedType = measurementTypes[i]\n\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = selectedType\n        setPreparedIngredient(data)\n\n        const copiedList = preparedIngredientsList;\n        copiedList[index] = data;\n        setPreparedIngredientsList(copiedList);\n    }\n\n    const handleAllPreparedIngredientsSubmit = function (event) {\n        event.preventDefault();\n\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['preparedIngredients'] = [];\n\n        ingredientFormValues.forEach((element) => {\n            onPreparedIngredient(element);\n            copiedRecipe['preparedIngredients'].push(element);\n        })\n        setRecipe(copiedRecipe);\n    }\n\n    // add more ingredients\n    const addAnotherIngredient = function () {\n        setIngredientFormValues([...ingredientFormValues, {}])\n    }\n\n    // create recipe\n    const handleSubmit = function (event) {\n        event.preventDefault();\n\n        console.log(recipe);\n        onUpdate(recipe);\n        // onCreate(recipe);\n    }\n\n    const createRecipe = function (event) {\n        event.preventDefault();\n        onCreate(recipe);\n\n        setToggleButton(true);\n    }\n\n    const addDetails = () => {\n        getRecipes();\n    }\n\n\n    const mealOptions = meals.map((meal, index) => {\n        return <option key={index} value={index}>{meal}</option>\n    })\n\n    const tagsOptions = tags.map((tag, index) => {\n        return <option key={index} value={index}>{tag}</option>\n    })\n\n    const ingredientsOptions = ingredients.map((ingredient, index) => {\n        return <option key={index} value={index}>{ingredient.name}</option>\n    })\n\n    const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n        return <option key={index} value={index}>{measurement_type}</option>\n    })\n\n\n\n    return (\n        <div className=\"recipe-form\">\n            {/* <form onSubmit={handleSubmit}> */}\n                <input type=\"text\" placeholder=\"Recipe name\" name=\"name\" onChange={handleChange} defaultValue={recipe.name} />\n                <select name=\"type\" onChange={handleMeal} defaultValue=\"select-meal\">\n                    <option disabled value=\"select-meal\">Select a meal</option>\n                    {mealOptions}\n                </select>\n                <input type=\"number\" placeholder=\"Number of portions\" name=\"portions\" onChange={handleChange} defaultValue={recipe.portions} />\n                <input type=\"number\" step=\"0.01\" placeholder=\"Cooking time\" name=\"cooking_time\" onChange={handleChange} defaultValue={recipe.cooking_time} />\n                \n                <button onClick={createRecipe}>Create recipe</button>\n                <br />\n            <br />\n            {toggleButton ? \n            <button onClick={addDetails}>Add details</button> : null}\n            \n             {/* {toggleForm ? */}\n            <IngredientSection handleAllPreparedIngredientsSubmit={handleAllPreparedIngredientsSubmit} ingredientsOptions={ingredientsOptions} handleIngredients={handleIngredients}\n                handlePreparedIngredientChange={handlePreparedIngredientChange} handleMeasurementType={handleMeasurementType} measurementTypeOptions={measurementTypeOptions}\n                addAnotherIngredient={addAnotherIngredient} ingredientFormValues={ingredientFormValues}  />\n                {/* : null} */}\n\n                {/* <p>Add ingredients:</p>\n                <form onSubmit={handleAllPreparedIngredientsSubmit}>\n                {ingredientFormValues.map((element, index) => {\n                    return (\n                        <div key={index}>\n                            <select name=\"ingredient\" onChange={event => handleIngredients(index, event)} defaultValue={\"select-ingredient\"} >\n                                <option disabled value=\"select-ingredient\">Select an ingredient</option>\n                                {ingredientsOptions}\n                            </select>\n                            <input type=\"number\" step=\"0.01\" placeholder=\"Measurement\" name=\"measurement\" onChange={event => handlePreparedIngredientChange(index, event)} defaultValue={element.measurement} />\n                            <select name=\"measurementType\" onChange={event => handleMeasurementType(index, event)} defaultValue={\"select-measurement-type\"}>\n                                <option disabled value=\"select-measurement-type\">Select a measurement type</option>\n                                {measurementTypeOptions}\n                            </select>\n                            <input type=\"text\" placeholder=\"Preparation\" name=\"preparation\" onChange={event => handlePreparedIngredientChange(index, event)} defaultValue={element.preparation} />\n                            <br />\n                        </div>)\n                })}\n                <button onClick={addAnotherIngredient}>Add another ingredient</button>\n                <br />\n                <button type=\"submit\">Submit ingredients</button>\n                {/* <button onClick={handleAllPreparedIngredientsSubmit}>Submit ingredients</button> */}\n                {/* </form> */}\n\n                {/* TAGS */}\n                <br />\n                <br />\n                <p>Add tag:</p>\n                    <form>\n                <select name=\"tags\" onChange={handleTags} defaultValue=\"select-tag\">\n                    <option disabled value=\"select-tag\">Select a tag</option>\n                    {tagsOptions}\n                </select>\n\n                {/* INSTRUCTIONS */}\n                <br />\n                <br />\n                <p>Add instruction:</p>\n                <input type=\"text\" placeholder=\"Instructions\" name=\"instructions\" onChange={handleInstructions} defaultValue={recipe.instructions} />\n                </form>\n\n                <br />\n                <br />\n            \n                <button onClick={handleSubmit}>Create Recipe</button>\n            {/* </form> */}\n\n        </div>\n    )\n}\n\nexport default RecipeForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}