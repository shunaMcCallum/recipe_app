{"ast":null,"code":"var _jsxFileName = \"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js\",\n    _s = $RefreshSig$();\n\nimport { queryAllByPlaceholderText } from '@testing-library/react';\nimport React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeForm = _ref => {\n  _s();\n\n  let {\n    onCreate,\n    onUpdate,\n    onPreparedIngredient,\n    ingredients\n  } = _ref;\n  const [meals, setMeals] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [measurementTypes, setMeasurementTypes] = useState([]);\n  const [recipe, setRecipe] = useState({// name: \"\",\n    // meal: \"\",\n    // calories: 0,\n    // portions: 0,\n    // preparedIngredients: [],\n    // cooking_time: 0,\n    // instructions: [],\n    // tags: []\n  });\n  const [preparedIngredient, setPreparedIngredient] = useState({// ingredient: {},\n    // measurement: 0,\n    // measurementType: \"\",\n    // preparation: \"\",\n    // caloriesPerPreparedIngredient: 0\n  });\n  const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n  const [ingredientFormValues, setIngredientFormValues] = useState([{}]); // fetch eNums from backend\n\n  useEffect(() => {\n    getMeals();\n  }, []);\n  useEffect(() => {\n    getTags();\n  }, []);\n  useEffect(() => {\n    getMeasurementTypes();\n  }, []);\n\n  const getMeals = () => {\n    Request.get('http://localhost:8080/meal').then(mealData => setMeals(mealData));\n  };\n\n  const getTags = () => {\n    Request.get('http://localhost:8080/tags').then(tagData => setTags(tagData));\n  };\n\n  const getMeasurementTypes = () => {\n    Request.get('http://localhost:8080/measurements').then(measurementData => setMeasurementTypes(measurementData));\n  }; // handle form events\n\n\n  const handleChange = event => {\n    let propertyName = event.target.name;\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe[propertyName] = event.target.value;\n    setRecipe(copiedRecipe);\n  };\n\n  const handleMeal = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedMeal = meals[index];\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['meal'] = selectedMeal;\n    setRecipe(copiedRecipe);\n  };\n\n  const handleTags = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedTag = tags[index];\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['tags'] = selectedTag;\n    setRecipe(copiedRecipe);\n  }; // submitting prepared ingredients\n\n\n  const handlePreparedIngredientChange = (index, event) => {\n    let data = [...ingredientFormValues];\n    data[index][event.target.name] = event.target.value;\n    setPreparedIngredient(data);\n    const copiedList = preparedIngredientsList;\n    copiedList[index] = data;\n    setPreparedIngredientsList(copiedList);\n    console.log(preparedIngredientsList);\n  };\n\n  const handleIngredients = function (index, event) {\n    const i = parseInt(event.target.value);\n    const selectedIngredient = ingredients[i];\n    let data = [...ingredientFormValues];\n    data[index][event.target.name] = selectedIngredient;\n    setPreparedIngredient(data);\n    const copiedList = preparedIngredientsList;\n    copiedList[index] = data;\n    setPreparedIngredientsList(copiedList);\n    console.log(preparedIngredientsList);\n  };\n\n  const handleMeasurementType = function (index, event) {\n    const i = parseInt(event.target.value);\n    const selectedType = measurementTypes[i];\n    let data = [...ingredientFormValues];\n    data[index][event.target.name] = selectedType;\n    setPreparedIngredient(data);\n    const copiedList = preparedIngredientsList;\n    copiedList[index] = data;\n    setPreparedIngredientsList(copiedList);\n    console.log(preparedIngredientsList);\n  };\n\n  const handleAllPreparedIngredientsSubmit = function (event) {\n    event.preventDefault();\n    console.log(preparedIngredientsList); // ingredientFormValues.forEach((element) => {\n    //     // element['recipe'] = recipe;\n    //     onPreparedIngredient(element);\n    //     setPreparedIngredientsList([...preparedIngredientsList, element])\n    // })\n\n    let copiedRecipe = { ...recipe\n    };\n    copiedRecipe['preparedIngredients'] = preparedIngredientsList;\n    setRecipe(copiedRecipe);\n  }; // const addIngredientsToRecipe = async () => {\n  //     const result = await handleAllPreparedIngredientsSubmit();\n  //     console.log(result);\n  //     let copiedRecipe = { ...recipe };\n  //     copiedRecipe['preparedIngredients'] = preparedIngredientsList;\n  //     setRecipe(copiedRecipe);\n  // }\n  // add more ingredients\n\n\n  const addAnotherIngredient = function () {\n    setIngredientFormValues([...ingredientFormValues, {}]);\n  }; // create recipe\n\n\n  const handleSubmit = function (event) {\n    event.preventDefault(); // onUpdate(recipe);\n\n    onCreate(recipe);\n  };\n\n  const createRecipe = function (event) {\n    event.preventDefault();\n    onCreate(recipe);\n  };\n\n  const mealOptions = meals.map((meal, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: meal\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 16\n    }, this);\n  });\n  const tagsOptions = tags.map((tag, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: tag\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 16\n    }, this);\n  });\n  const ingredientsOptions = ingredients.map((ingredient, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: ingredient.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 16\n    }, this);\n  });\n  const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: measurement_type\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recipe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Recipe name\",\n      name: \"name\",\n      onChange: handleChange,\n      defaultValue: recipe.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"type\",\n      onChange: handleMeal,\n      defaultValue: \"select-meal\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        disabled: true,\n        value: \"select-meal\",\n        children: \"Select a meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this), mealOptions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Number of portions\",\n      name: \"portions\",\n      onChange: handleChange,\n      defaultValue: recipe.portions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      step: \"0.01\",\n      placeholder: \"Cooking time\",\n      name: \"cooking_time\",\n      onChange: handleChange,\n      defaultValue: recipe.cooking_time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createRecipe,\n      children: \"Create recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add ingredients:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAllPreparedIngredientsSubmit,\n      children: [ingredientFormValues.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"ingredient\",\n            onChange: event => handleIngredients(index, event),\n            defaultValue: \"select-ingredient\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"select-ingredient\",\n              children: \"Select an ingredient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 33\n            }, this), ingredientsOptions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            placeholder: \"Measurement\",\n            name: \"measurement\",\n            onChange: event => handlePreparedIngredientChange(index, event),\n            defaultValue: element.measurement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"measurementType\",\n            onChange: event => handleMeasurementType(index, event),\n            defaultValue: \"select-measurement-type\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"select-measurement-type\",\n              children: \"Select a measurement type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 33\n            }, this), measurementTypeOptions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Preparation\",\n            name: \"preparation\",\n            onChange: event => handlePreparedIngredientChange(index, event),\n            defaultValue: element.preparation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addAnotherIngredient,\n        children: \"Add another ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Add tag:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"tags\",\n        onChange: handleTags,\n        defaultValue: \"select-tag\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          disabled: true,\n          value: \"select-tag\",\n          children: \"Select a tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), tagsOptions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Add instruction:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Instructions\",\n        name: \"instructions\",\n        onChange: handleChange,\n        defaultValue: recipe.instructions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Create Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecipeForm, \"5fAmk3RQqV8lqzM3IJOTLxpH/7I=\");\n\n_c = RecipeForm;\nexport default RecipeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeForm\");","map":{"version":3,"names":["queryAllByPlaceholderText","React","useEffect","useState","Request","RecipeForm","onCreate","onUpdate","onPreparedIngredient","ingredients","meals","setMeals","tags","setTags","measurementTypes","setMeasurementTypes","recipe","setRecipe","preparedIngredient","setPreparedIngredient","preparedIngredientsList","setPreparedIngredientsList","ingredientFormValues","setIngredientFormValues","getMeals","getTags","getMeasurementTypes","get","then","mealData","tagData","measurementData","handleChange","event","propertyName","target","name","copiedRecipe","value","handleMeal","index","parseInt","selectedMeal","handleTags","selectedTag","handlePreparedIngredientChange","data","copiedList","console","log","handleIngredients","i","selectedIngredient","handleMeasurementType","selectedType","handleAllPreparedIngredientsSubmit","preventDefault","addAnotherIngredient","handleSubmit","createRecipe","mealOptions","map","meal","tagsOptions","tag","ingredientsOptions","ingredient","measurementTypeOptions","measurement_type","portions","cooking_time","element","measurement","preparation","instructions"],"sources":["/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js"],"sourcesContent":["import { queryAllByPlaceholderText } from '@testing-library/react';\nimport React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\n\nconst RecipeForm = ({ onCreate, onUpdate, onPreparedIngredient, ingredients }) => {\n\n    const [meals, setMeals] = useState([]);\n    const [tags, setTags] = useState([]);\n    const [measurementTypes, setMeasurementTypes] = useState([]);\n\n    const [recipe, setRecipe] = useState({\n        // name: \"\",\n        // meal: \"\",\n        // calories: 0,\n        // portions: 0,\n        // preparedIngredients: [],\n        // cooking_time: 0,\n        // instructions: [],\n        // tags: []\n    });\n    const [preparedIngredient, setPreparedIngredient] = useState({\n        // ingredient: {},\n        // measurement: 0,\n        // measurementType: \"\",\n        // preparation: \"\",\n        // caloriesPerPreparedIngredient: 0\n    });\n    const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n    const [ingredientFormValues, setIngredientFormValues] = useState([{}]);\n\n    // fetch eNums from backend\n    useEffect(() => {\n        getMeals();\n    }, [])\n\n    useEffect(() => {\n        getTags();\n    }, [])\n\n    useEffect(() => {\n        getMeasurementTypes();\n    }, [])\n\n    const getMeals = () => {\n        Request.get('http://localhost:8080/meal')\n            .then(mealData => setMeals(mealData));\n    }\n\n    const getTags = () => {\n        Request.get('http://localhost:8080/tags')\n            .then(tagData => setTags(tagData));\n    }\n\n    const getMeasurementTypes = () => {\n        Request.get('http://localhost:8080/measurements')\n            .then(measurementData => setMeasurementTypes(measurementData));\n    }\n\n\n    // handle form events\n    const handleChange = (event) => {\n        let propertyName = event.target.name;\n        let copiedRecipe = { ...recipe }\n        copiedRecipe[propertyName] = event.target.value;\n        setRecipe(copiedRecipe)\n    }\n\n    const handleMeal = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeal = meals[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['meal'] = selectedMeal\n        setRecipe(copiedRecipe)\n    }\n\n    const handleTags = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedTag = tags[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['tags'] = selectedTag\n        setRecipe(copiedRecipe)\n    }\n\n    // submitting prepared ingredients\n    const handlePreparedIngredientChange = (index, event) => {\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = event.target.value\n        setPreparedIngredient(data);\n\n        const copiedList = preparedIngredientsList;\n        copiedList[index] = data;\n        setPreparedIngredientsList(copiedList);\n        console.log(preparedIngredientsList);\n    }\n\n    const handleIngredients = function (index, event) {\n        const i = parseInt(event.target.value)\n        const selectedIngredient = ingredients[i]\n\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = selectedIngredient\n        setPreparedIngredient(data)\n\n        const copiedList = preparedIngredientsList;\n        copiedList[index] = data;\n        setPreparedIngredientsList(copiedList);\n        console.log(preparedIngredientsList);\n    }\n\n    const handleMeasurementType = function (index, event) {\n        const i = parseInt(event.target.value)\n        const selectedType = measurementTypes[i]\n\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = selectedType\n        setPreparedIngredient(data)\n\n        const copiedList = preparedIngredientsList;\n        copiedList[index] = data;\n        setPreparedIngredientsList(copiedList);\n        console.log(preparedIngredientsList);\n    }\n\n    const handleAllPreparedIngredientsSubmit = function (event) {\n        event.preventDefault();\n\n        console.log(preparedIngredientsList);\n\n        // ingredientFormValues.forEach((element) => {\n        //     // element['recipe'] = recipe;\n        //     onPreparedIngredient(element);\n        //     setPreparedIngredientsList([...preparedIngredientsList, element])\n        // })\n\n\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['preparedIngredients'] = preparedIngredientsList;\n        setRecipe(copiedRecipe);\n    }\n\n    // const addIngredientsToRecipe = async () => {\n    //     const result = await handleAllPreparedIngredientsSubmit();\n    //     console.log(result);\n\n    //     let copiedRecipe = { ...recipe };\n    //     copiedRecipe['preparedIngredients'] = preparedIngredientsList;\n    //     setRecipe(copiedRecipe);\n    // }\n\n    // add more ingredients\n    const addAnotherIngredient = function () {\n        setIngredientFormValues([...ingredientFormValues, {}])\n    }\n\n    // create recipe\n    const handleSubmit = function (event) {\n\n        event.preventDefault();\n        // onUpdate(recipe);\n        onCreate(recipe);\n    }\n\n    const createRecipe = function (event) {\n        event.preventDefault();\n        onCreate(recipe);\n    }\n\n\n    const mealOptions = meals.map((meal, index) => {\n        return <option key={index} value={index}>{meal}</option>\n    })\n\n    const tagsOptions = tags.map((tag, index) => {\n        return <option key={index} value={index}>{tag}</option>\n    })\n\n    const ingredientsOptions = ingredients.map((ingredient, index) => {\n        return <option key={index} value={index}>{ingredient.name}</option>\n    })\n\n    const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n        return <option key={index} value={index}>{measurement_type}</option>\n    })\n\n\n\n    return (\n        <div className=\"recipe-form\">\n            {/* <form onSubmit={handleSubmit}> */}\n                <input type=\"text\" placeholder=\"Recipe name\" name=\"name\" onChange={handleChange} defaultValue={recipe.name} />\n                <select name=\"type\" onChange={handleMeal} defaultValue=\"select-meal\">\n                    <option disabled value=\"select-meal\">Select a meal</option>\n                    {mealOptions}\n                </select>\n                <input type=\"number\" placeholder=\"Number of portions\" name=\"portions\" onChange={handleChange} defaultValue={recipe.portions} />\n                <input type=\"number\" step=\"0.01\" placeholder=\"Cooking time\" name=\"cooking_time\" onChange={handleChange} defaultValue={recipe.cooking_time} />\n                \n                <button onClick={createRecipe}>Create recipe</button>\n                <br />\n                <br />\n                \n                <p>Add ingredients:</p>\n                <form onSubmit={handleAllPreparedIngredientsSubmit}>\n                {ingredientFormValues.map((element, index) => {\n                    return (\n                        <div key={index}>\n                            <select name=\"ingredient\" onChange={event => handleIngredients(index, event)} defaultValue={\"select-ingredient\"} >\n                                <option disabled value=\"select-ingredient\">Select an ingredient</option>\n                                {ingredientsOptions}\n                            </select>\n                            <input type=\"number\" step=\"0.01\" placeholder=\"Measurement\" name=\"measurement\" onChange={event => handlePreparedIngredientChange(index, event)} defaultValue={element.measurement} />\n                            <select name=\"measurementType\" onChange={event => handleMeasurementType(index, event)} defaultValue={\"select-measurement-type\"}>\n                                <option disabled value=\"select-measurement-type\">Select a measurement type</option>\n                                {measurementTypeOptions}\n                            </select>\n                            <input type=\"text\" placeholder=\"Preparation\" name=\"preparation\" onChange={event => handlePreparedIngredientChange(index, event)} defaultValue={element.preparation} />\n                            <br />\n                        </div>)\n                })}\n                <button onClick={addAnotherIngredient}>Add another ingredient</button>\n                <br />\n                {/* <button onClick={handleAllPreparedIngredientsSubmit}>Submit ingredients</button> */}\n                </form>\n\n                {/* TAGS */}\n                <br />\n                <br />\n                <p>Add tag:</p>\n                    <form>\n                <select name=\"tags\" onChange={handleTags} defaultValue=\"select-tag\">\n                    <option disabled value=\"select-tag\">Select a tag</option>\n                    {tagsOptions}\n                </select>\n\n                {/* INSTRUCTIONS */}\n                <br />\n                <br />\n                <p>Add instruction:</p>\n                <input type=\"text\" placeholder=\"Instructions\" name=\"instructions\" onChange={handleChange} defaultValue={recipe.instructions} />\n                </form>\n\n                <br />\n                <br />\n            \n                <button onClick={handleSubmit}>Create Recipe</button>\n            {/* </form> */}\n\n        </div>\n    )\n}\n\nexport default RecipeForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}