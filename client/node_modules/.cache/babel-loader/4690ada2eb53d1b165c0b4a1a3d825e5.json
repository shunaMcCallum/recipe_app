{"ast":null,"code":"var _jsxFileName = \"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/CreateIngredient/IngredientForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IngredientForm = _ref => {\n  _s();\n\n  let {\n    onCreate\n  } = _ref;\n  const [types, setTypes] = useState([]);\n  const [measurementTypes, setMeasurementTypes] = useState([]);\n  const [ingredient, setIngredient] = useState({\n    name: \"\",\n    type: \"\",\n    calories: 0,\n    measurement: 0,\n    measurement_type: \"\"\n  }); // fetch eNums from backend\n  // useEffect(() => {\n  //     getTypes();\n  // }, [])\n  // useEffect(() => {\n  //     getMeasurementTypes();\n  // }, [])\n  // const getTypes = () => {\n  //     Request.get('http://localhost:8080/ingredient_types')\n  //         // .then(typeData => setTypes(typeData));\n  //         .then(typeData => console.log(typeData));\n  // }\n  // const getMeasurementTypes = () => {\n  //     Request.get('http://localhost:8080/measurements')\n  //         // .then(typeData => setMeasurementTypes(measurementData));\n  //         .then(measurementData => console.log(measurementData));\n  // }\n  // handle form events\n\n  const handleChange = function (event) {\n    let propertyName = event.target.name;\n    let copiedIngredient = { ...ingredient\n    };\n    copiedIngredient[propertyName] = event.target.value;\n    setIngredient(copiedIngredient);\n  };\n\n  const handleType = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedType = types[index];\n    let copiedIngredient = { ...ingredient\n    };\n    copiedIngredient['type'] = selectedType;\n    setIngredient(copiedIngredient);\n  };\n\n  const handleMeasurementType = function (event) {\n    const index = parseInt(event.target.value);\n    const selectedMeasurementType = measurementTypes[index];\n    let copiedIngredient = { ...ingredient\n    };\n    copiedIngredient['measurementType'] = selectedMeasurementType;\n    setIngredient(copiedIngredient);\n  };\n\n  const handleSubmit = function (event) {\n    console.log(\"handle submit called\");\n    event.preventDefault();\n    onCreate(ingredient);\n  };\n\n  const typeOptions = types.map((type, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: type\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 16\n    }, this);\n  });\n  const measurementTypeOptions = measurementTypes.map((measurementType, index) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: index,\n      children: measurementType\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ingredient-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ingredient Name\",\n        name: \"Name\",\n        onChange: handleChange,\n        value: ingredient.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Number of Calories\",\n        name: \"Calories\",\n        onChange: handleChange,\n        value: ingredient.calories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Measurement\",\n        name: \"per\",\n        onChange: handleChange,\n        value: ingredient.measurement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(IngredientForm, \"qom7fd+yrGqgkL1TlmKjqMZvmAk=\");\n\n_c = IngredientForm;\nexport default IngredientForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"IngredientForm\");","map":{"version":3,"names":["React","useEffect","useState","IngredientForm","onCreate","types","setTypes","measurementTypes","setMeasurementTypes","ingredient","setIngredient","name","type","calories","measurement","measurement_type","handleChange","event","propertyName","target","copiedIngredient","value","handleType","index","parseInt","selectedType","handleMeasurementType","selectedMeasurementType","handleSubmit","console","log","preventDefault","typeOptions","map","measurementTypeOptions","measurementType"],"sources":["/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/CreateIngredient/IngredientForm.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst IngredientForm = ({ onCreate }) => {\n    \n    const [types, setTypes] = useState([]);\n    const [measurementTypes, setMeasurementTypes] = useState([]);\n    \n    const [ingredient, setIngredient] = useState({\n        name: \"\",\n        type: \"\",\n        calories: 0,\n        measurement: 0,\n        measurement_type: \"\"\n    });\n\n    // fetch eNums from backend\n    // useEffect(() => {\n    //     getTypes();\n    // }, [])\n\n    // useEffect(() => {\n    //     getMeasurementTypes();\n    // }, [])\n\n    // const getTypes = () => {\n    //     Request.get('http://localhost:8080/ingredient_types')\n    //         // .then(typeData => setTypes(typeData));\n    //         .then(typeData => console.log(typeData));\n    // }\n\n    // const getMeasurementTypes = () => {\n    //     Request.get('http://localhost:8080/measurements')\n    //         // .then(typeData => setMeasurementTypes(measurementData));\n    //         .then(measurementData => console.log(measurementData));\n    // }\n\n\n    // handle form events\n    const handleChange = function (event) {\n        let propertyName = event.target.name;\n        let copiedIngredient = { ...ingredient }\n        copiedIngredient[propertyName] = event.target.value;\n        setIngredient(copiedIngredient)\n    }\n\n    const handleType = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedType = types[index]\n        let copiedIngredient = { ...ingredient };\n        copiedIngredient['type'] = selectedType\n        setIngredient(copiedIngredient)\n    }\n\n    const handleMeasurementType = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeasurementType = measurementTypes[index]\n        let copiedIngredient = { ...ingredient };\n        copiedIngredient['measurementType'] = selectedMeasurementType\n        setIngredient(copiedIngredient)\n    }\n\n    const handleSubmit = function (event) {\n        console.log(\"handle submit called\");\n        event.preventDefault();\n        onCreate(ingredient);\n    }\n\n    const typeOptions = types.map((type, index) => {\n        return <option key={index} value={index}>{type}</option>\n    })\n\n    const measurementTypeOptions = measurementTypes.map((measurementType, index) => {\n        return <option key={index} value={index}>{measurementType}</option>\n    })\n\n    return (\n        <div className=\"ingredient-form\">\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Ingredient Name\" name=\"Name\" onChange={handleChange} value={ingredient.name} />\n                {/* <select name=\"Type\" onChange={handleType} defaultValue=\"select-type\"> */}\n                    {/* <option disabled value=\"select-type\"> Select an ingredient type</option> */}\n                        {/* {typeOptions} */}\n                {/* </select> */}\n                <input type=\"number\" placeholder=\"Number of Calories\" name=\"Calories\" onChange={handleChange} value={ingredient.calories} />\n                <input type=\"number\" placeholder=\"Measurement\" name=\"per\" onChange={handleChange} value={ingredient.measurement} />\n                {/* <select name=\"Measurement Type\" onChange={handleMeasurementType} defaultValue=\"select-measurement-type\"> */}\n                    {/* <option disabled value=\"select-measurement-type\"> Select a measurement type</option> */}\n                    {/* {measurementTypeOptions} */}\n                {/* </select> */}\n                <button type=\"submit\">Save</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default IngredientForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}