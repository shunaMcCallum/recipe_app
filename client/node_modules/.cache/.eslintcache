[{"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/index.js":"1","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/App.js":"2","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/reportWebVitals.js":"3","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/HomePage/HomePage.js":"4","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/components/NavBar/NavBar.js":"5","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/RecipeContainer.js":"6","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/IngredientContainer.js":"7","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/helpers/request.js":"8","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/RecipeList/RecipeListContainer.js":"9","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/RecipeList/RecipeListItem.js":"10","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/SelectedRecipe.js":"11","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/InstructionList.js":"12","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/InstructionListItem.js":"13","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/SelectedIngredient/SelectedIngredient.js":"14","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/IngredientList/IngredientListContainer.js":"15","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/IngredientList/IngredientListItem.js":"16","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/RecipeIngredientList.js":"17","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/RecipeIngredientListItem.js":"18","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/CreateIngredient/IngredientForm.js":"19","/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js":"20"},{"size":535,"mtime":1662067209204,"results":"21","hashOfConfig":"22"},{"size":3565,"mtime":1663256361836,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1662067209205,"results":"24","hashOfConfig":"22"},{"size":168,"mtime":1663059762638,"results":"25","hashOfConfig":"22"},{"size":889,"mtime":1663061708394,"results":"26","hashOfConfig":"22"},{"size":655,"mtime":1663175565346,"results":"27","hashOfConfig":"22"},{"size":706,"mtime":1663175182074,"results":"28","hashOfConfig":"22"},{"size":491,"mtime":1663073279211,"results":"29","hashOfConfig":"22"},{"size":462,"mtime":1663079318606,"results":"30","hashOfConfig":"22"},{"size":348,"mtime":1663080137694,"results":"31","hashOfConfig":"22"},{"size":676,"mtime":1663080249769,"results":"32","hashOfConfig":"22"},{"size":439,"mtime":1663079361246,"results":"33","hashOfConfig":"22"},{"size":227,"mtime":1663079367847,"results":"34","hashOfConfig":"22"},{"size":398,"mtime":1663080542374,"results":"35","hashOfConfig":"22"},{"size":516,"mtime":1663080837282,"results":"36","hashOfConfig":"22"},{"size":372,"mtime":1663080217135,"results":"37","hashOfConfig":"22"},{"size":465,"mtime":1663080275673,"results":"38","hashOfConfig":"22"},{"size":346,"mtime":1663080293841,"results":"39","hashOfConfig":"22"},{"size":3300,"mtime":1663088157333,"results":"40","hashOfConfig":"22"},{"size":7394,"mtime":1663254312504,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"5l51ba",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"45"},"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/index.js",[],[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/App.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/reportWebVitals.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/HomePage/HomePage.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/components/NavBar/NavBar.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/RecipeContainer.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/IngredientContainer.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/helpers/request.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/RecipeList/RecipeListContainer.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/RecipeList/RecipeListItem.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/SelectedRecipe.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/InstructionList.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/InstructionListItem.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/SelectedIngredient/SelectedIngredient.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/IngredientList/IngredientListContainer.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/IngredientList/IngredientListItem.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/RecipeIngredientList.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/SelectedRecipe/RecipeIngredientListItem.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/IngredientSection/CreateIngredient/IngredientForm.js",[],[],"/Users/codeclan_student/Desktop/practice_projects/recipe_app/client/src/containers/RecipeSection/CreateRecipe/RecipeForm.js",["104","105"],[],"import React, { useEffect, useState } from 'react';\nimport Request from '../../../helpers/request';\n\nconst RecipeForm = ({ onCreate, onPreparedIngredient, ingredients }) => {\n\n    const [meals, setMeals] = useState([]);\n    const [tags, setTags] = useState([]);\n    const [measurementTypes, setMeasurementTypes] = useState([]);\n\n    const [recipe, setRecipe] = useState({});\n    const [preparedIngredient, setPreparedIngredient] = useState({});\n    const [preparedIngredientsList, setPreparedIngredientsList] = useState([]);\n\n    const [ingredientFormValues, setIngredientFormValues] = useState([{}]);\n\n    // fetch eNums from backend\n    useEffect(() => {\n        getMeals();\n    }, [])\n\n    useEffect(() => {\n        getTags();\n    }, [])\n\n    useEffect(() => {\n        getMeasurementTypes();\n    }, [])\n\n    const getMeals = () => {\n        Request.get('http://localhost:8080/meal')\n            .then(mealData => setMeals(mealData));\n    }\n\n    const getTags = () => {\n        Request.get('http://localhost:8080/tags')\n            .then(tagData => setTags(tagData));\n    }\n\n    const getMeasurementTypes = () => {\n        Request.get('http://localhost:8080/measurements')\n            .then(measurementData => setMeasurementTypes(measurementData));\n    }\n\n\n    // handle form events\n    const handleChange = (event) => {\n        let propertyName = event.target.name;\n        let copiedRecipe = { ...recipe }\n        copiedRecipe[propertyName] = event.target.value;\n        setRecipe(copiedRecipe)\n    }\n\n    const handleMeal = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedMeal = meals[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['meal'] = selectedMeal\n        setRecipe(copiedRecipe)\n    }\n\n    const handleTags = function (event) {\n        const index = parseInt(event.target.value)\n        const selectedTag = tags[index]\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['tags'] = selectedTag\n        setRecipe(copiedRecipe)\n    }\n\n    // submitting prepared ingredients\n    const handlePreparedIngredientChange = (index, event) => {\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = event.target.value\n        setPreparedIngredient(data);\n    }\n\n    const handleIngredients = function (index, event) {\n        const i = parseInt(event.target.value)\n        const selectedIngredient = ingredients[i]\n\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = selectedIngredient\n        setPreparedIngredient(data)\n    }\n\n    const handleMeasurementType = function (index, event) {\n        const i = parseInt(event.target.value)\n        const selectedType = measurementTypes[i]\n\n        let data = [...ingredientFormValues];\n        data[index][event.target.name] = selectedType\n        setPreparedIngredient(data)\n\n    }\n\n    const handleAllPreparedIngredientsSubmit = function (event) {\n        event.preventDefault();\n\n        ingredientFormValues.forEach((element) => {\n            element['recipe'] = recipe;\n            onPreparedIngredient(element);\n            preparedIngredientsList.push(element);\n        })\n\n        let copiedRecipe = { ...recipe };\n        copiedRecipe['preparedIngredients'] = preparedIngredientsList;\n        setRecipe(copiedRecipe);\n    }\n\n    // add more ingredients\n    const addAnotherIngredient = function () {\n        setIngredientFormValues([...ingredientFormValues, {}])\n    }\n\n\n    // create recipe\n    const handleSubmit = function (event) {\n        event.preventDefault();\n        onCreate(recipe);\n    }\n\n\n    const mealOptions = meals.map((meal, index) => {\n        return <option key={index} value={index}>{meal}</option>\n    })\n\n    const tagsOptions = tags.map((tag, index) => {\n        return <option key={index} value={index}>{tag}</option>\n    })\n\n    const ingredientsOptions = ingredients.map((ingredient, index) => {\n        return <option key={index} value={index}>{ingredient.name}</option>\n    })\n\n    const measurementTypeOptions = measurementTypes.map((measurement_type, index) => {\n        return <option key={index} value={index}>{measurement_type}</option>\n    })\n\n\n\n    return (\n        <div className=\"recipe-form\">\n            <form onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Recipe name\" name=\"name\" onChange={handleChange} defaultValue={recipe.name} />\n                <select name=\"type\" onChange={handleMeal} defaultValue=\"select-meal\">\n                    <option disabled value=\"select-meal\">Select a meal</option>\n                    {mealOptions}\n                </select>\n                <input type=\"number\" placeholder=\"Number of portions\" name=\"portions\" onChange={handleChange} defaultValue={recipe.portions} />\n                <input type=\"number\" step=\"0.01\" placeholder=\"Cooking time\" name=\"cooking_time\" onChange={handleChange} defaultValue={recipe.cooking_time} />\n                \n                <br />\n                <br />\n                \n                <p>Add ingredients:</p>\n                {ingredientFormValues.map((element, index) => {\n                    return (\n                        <div key={index}>\n                            <select name=\"ingredient\" onChange={event => handleIngredients(index, event)} defaultValue={\"select-ingredient\"} >\n                                <option disabled value=\"select-ingredient\">Select an ingredient</option>\n                                {ingredientsOptions}\n                            </select>\n                            <input type=\"number\" step=\"0.01\" placeholder=\"Measurement\" name=\"measurement\" onChange={event => handlePreparedIngredientChange(index, event)} defaultValue={element.measurement} />\n                            <select name=\"measurementType\" onChange={event => handleMeasurementType(index, event)} defaultValue={\"select-measurement-type\"}>\n                                <option disabled value=\"select-measurement-type\">Select a measurement type</option>\n                                {measurementTypeOptions}\n                            </select>\n                            <input type=\"text\" placeholder=\"Preparation\" name=\"preparation\" onChange={event => handlePreparedIngredientChange(index, event)} defaultValue={element.preparation} />\n                            <br />\n                        </div>)\n                })}\n                <button onClick={addAnotherIngredient}>Add another ingredient</button>\n                <br />\n                <button onClick={handleAllPreparedIngredientsSubmit}>Submit ingredients</button>\n\n                {/* TAGS */}\n                <br />\n                <br />\n                <p>Add tag:</p>\n                <select name=\"tags\" onChange={handleTags} defaultValue=\"select-tag\">\n                    <option disabled value=\"select-tag\">Select a tag</option>\n                    {tagsOptions}\n                </select>\n\n                {/* INSTRUCTIONS */}\n                <br />\n                <br />\n                <p>Add instruction:</p>\n                <input type=\"text\" placeholder=\"Instructions\" name=\"instructions\" onChange={handleChange} defaultValue={recipe.instructions} />\n\n                <br />\n                <br />\n            \n                <button onClick={handleSubmit}>Create Recipe</button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default RecipeForm;",{"ruleId":"106","severity":1,"message":"107","line":11,"column":12,"nodeType":"108","messageId":"109","endLine":11,"endColumn":30},{"ruleId":"106","severity":1,"message":"110","line":12,"column":37,"nodeType":"108","messageId":"109","endLine":12,"endColumn":63},"no-unused-vars","'preparedIngredient' is assigned a value but never used.","Identifier","unusedVar","'setPreparedIngredientsList' is assigned a value but never used."]